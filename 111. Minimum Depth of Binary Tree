/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(!root) return 0;
        
        int res = 0;
        queue<TreeNode*>q;
        q.push(root);
        
        while(!q.empty()){
            int size = q.size();
            res++;
            for(int i = 0; i < size; ++i){
                TreeNode *cur = q.front();q.pop();
                if(cur -> left == nullptr && cur -> right == nullptr) return res;
                if(cur -> left)  q.push(cur -> left);
                if(cur -> right) q.push(cur -> right);  
            } 
            
        }
        return res;
    }
};

class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root==NULL) return 0;
        if(root->left==NULL) return minDepth(root->right)+1;
        if(root->right==NULL) return minDepth(root->left)+1;
        return min(minDepth(root->left),minDepth(root->right))+1;
    }
};
