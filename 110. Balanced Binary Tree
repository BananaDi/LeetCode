/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
/*class Solution {
public:
    bool isBalanced(TreeNode* root) {
        if (root == NULL) return true;
        
        int left  = getHeight(root -> left);
        int right = getHeight(root -> right);
        
        return abs(left - right) <= 1 && isBalanced(root -> left) && isBalanced(root -> right);
    }
    
    int getHeight(TreeNode *root){
        if(!root) return 0;
        return max(getHeight(root -> left), getHeight(root -> right))+ 1;
    }
};*/
class solution {
public:
int dfsHeight (TreeNode *root) {
        if (root == NULL) return 0;
        
        int leftHeight = dfsHeight (root -> left);
        if (leftHeight == -1) return -1;
        int rightHeight = dfsHeight (root -> right);
        if (rightHeight == -1) return -1;
        
        if (abs(leftHeight - rightHeight) > 1)  return -1;
        return max (leftHeight, rightHeight) + 1;
    }
    bool isBalanced(TreeNode *root) {
        return dfsHeight (root) != -1;
    }
};
