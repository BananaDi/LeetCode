/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *head = new ListNode(0);
        
        int len1 = getlen(l1), len2 = getlen(l2);
        
        head -> next = (len1 > len2) ? helper(l1, l2, len1 - len2) : helper(l2, l1, len2 - len1);
        
        if (head -> next -> val > 9) {
            head -> next -> val = head -> next -> val - 10;
            head -> val = 1;
            return head;
        }
        return head -> next;
        
    }
    
private:
    int getlen(ListNode *head){
        int len = 0;
        while(head){
            head = head -> next;
            len++;
        }
        return len;
    } 
    
private:
    ListNode* helper(ListNode *l1, ListNode *l2, int offset){
        ListNode *head = l1;
        if (!l1) return nullptr;
        
        l1 -> val  = offset == 0 ? (l1 -> val + l2 -> val) : l1 -> val;
        l1 -> next = offset == 0 ? helper(l1 -> next, l2 -> next, 0) : helper(l1 -> next, l2, offset - 1);
        
        if (l1 -> next && l1 -> next -> val > 9){
            l1 -> val = l1 -> val + 1;
            l1 -> next -> val = l1 -> next -> val - 10;
        }
        
        return head;
    }    
};
