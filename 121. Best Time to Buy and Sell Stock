/*class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int res = 0;
        int size = prices.size();
        
        for(int i = 0; i < size - 1; ++i){
            for(int j = i+1; j < size; ++j){
                res = max(res,prices[j]- prices[i]);
            }
        }
        return res;   
    }
};*/

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int curMin = INT_MAX;
        int res = 0;
        
        for(int i = 0; i < prices.size(); ++i){
            if(prices[i] < curMin) 
                curMin = prices[i];
            else if(res < prices[i] - curMin) 
                res = prices[i] - curMin;    
        }
        return res;   
    }
};

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if (prices.size() <=1 ) return 0;
        int result = 0;
        int priceB = prices[0];
        for (int i=1; i< prices.size(); i++) {
            int gain = prices[i] - priceB;
            if (gain > result) result = gain;
            if (prices[i] < priceB) priceB = prices[i];
        }
        return result;
    }
};
