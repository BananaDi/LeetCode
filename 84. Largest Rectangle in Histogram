class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        if (heights.empty()) return 0;
        
        stack<int>stack;
        int res = 0;
        
        for(int i = 0; i < heights.size(); i++){
            if(stack.empty() || stack.top() <= heights[i]) stack.push(heights[i]);          
            
            else{
                int k = 1;
                while (!stack.empty() && stack.top() > heights[i]){
                    res = max(k * stack.top(), res);
                    stack.pop();
                    k++;    
                }
        
                while(k > 0) {
                    stack.push(heights[i]);
                    k--;
                }            
            }
        }
        int count = 1;
        while(!stack.empty()){
            res = max(res, stack.top() * count);
            stack.pop();
            count++;
        }
        return res;
    }
};
